# Semantic Release Configuration (YAML format - no JSON escaping headaches!)
branches:
  - main
  - name: develop
    prerelease: beta

plugins:
  - - "@semantic-release/commit-analyzer"
    - preset: "conventionalcommits"
  - - "@semantic-release/release-notes-generator"
    - preset: "conventionalcommits"
      writerOpts:
        transform: "./scripts/release-writer.cjs"
  - - "@semantic-release/changelog"
    - changelogFile: "CHANGELOG.md"
      changelogTitle: |
        # Changelog

        All notable changes to the ninaivalaigal project will be documented in this file.

        The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
        and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
  - - "@semantic-release/npm"
    - npmPublish: false
  - - "@semantic-release/github"
    - assets:
        - path: "CHANGELOG.md"
          label: "Changelog"
        - path: "docs/**/*.md"
          label: "Documentation"
      successComment: |
        🎉 This ${issue.pull_request ? 'PR is included' : 'issue has been resolved'} in version ${nextRelease.version} :tada:

        The release is available on [GitHub Releases](${releases.filter(release => release.name === 'GitHub')[0].url})
      failComment: |
        ❌ The release from branch `${branch.name}` had failed due to the following errors:
        - ${errors.map(err => err.message).join('\n- ')}
      releasedLabels:
        - "released<%= nextRelease.channel ? ` on @${nextRelease.channel}` : '' %> as <%= nextRelease.version %>"
  - - "@semantic-release/git"
    - assets:
        - "CHANGELOG.md"
        - "package.json"
        - "package-lock.json"
      message: |
        chore(release): ${nextRelease.version} [skip ci]

        ${nextRelease.notes}

preset: "conventionalcommits"
presetConfig:
  types:
    - type: "feat"
      section: "🚀 Features"
    - type: "fix"
      section: "🐛 Bug Fixes"
    - type: "perf"
      section: "⚡ Performance Improvements"
    - type: "revert"
      section: "⏪ Reverts"
    - type: "docs"
      section: "📚 Documentation"
    - type: "style"
      section: "💎 Styles"
    - type: "refactor"
      section: "📦 Code Refactoring"
    - type: "test"
      section: "🚨 Tests"
    - type: "build"
      section: "🛠 Build System"
    - type: "ci"
      section: "⚙️ Continuous Integration"
    - type: "chore"
      section: "♻️ Chores"
    - type: "security"
      section: "🔒 Security"
