version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: ninaivalaigal_dev_postgres
    environment:
      POSTGRES_DB: ninaivalaigal
      POSTGRES_USER: nina
      POSTGRES_PASSWORD: secure_nina_password
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nina -d ninaivalaigal"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ninaivalaigal_dev_redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: nina_redis_dev_password
    command: redis-server --requirepass nina_redis_dev_password --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ninaivalaigal_dev_api
    ports:
      - "13370:13370"
    environment:
      NINAIVALAIGAL_DATABASE_URL: postgresql://nina:secure_nina_password@  # pragma: allowlist secretpostgres:5432/ninaivalaigal
      NINAIVALAIGAL_JWT_SECRET: dev_jwt_secret_key_change_in_production
      NINAIVALAIGAL_DEBUG: 1
      PYTHONPATH: /app/server
      PORT: 13370
      # Enable auto-reload for development
      UVICORN_RELOAD: 1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # LIVE MOUNTS - Changes reflect immediately
      - ./server:/app/server:rw
      - ./backups:/app/backups:rw
      # Python cache optimization
      - api_cache:/app/server/__pycache__
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13370/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    # Development-friendly settings
    stdin_open: true
    tty: true

  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: ninaivalaigal_dev_ui
    ports:
      - "8081:8081"
    volumes:
      # Live mounts for UI development
      - ./ui:/app/ui:rw
      - ./static:/app/static:rw
    environment:
      NODE_ENV: development
      API_URL: http://localhost:13370
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  api_cache:
    driver: local

networks:
  default:
    name: ninaivalaigal_dev_network
