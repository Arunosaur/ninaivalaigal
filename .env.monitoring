# ============================================================================
# NINAIVALAIGAL FOUNDATION TEST MONITORING CONFIGURATION
# ============================================================================
# This file contains all monitoring and testing configuration for the
# Foundation SPEC test infrastructure and Phase 2B unified testbed.
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env.monitoring.local and fill in your actual values
# 2. Run ./scripts/setup-monitoring.sh to configure GitHub secrets
# 3. Test with ./test-monitoring.sh
# ============================================================================

# ============================================================================
# SLACK INTEGRATION (Recommended for immediate failure alerts)
# ============================================================================
# Get webhook URL from: https://api.slack.com/apps -> Incoming Webhooks
# 1. Go to https://api.slack.com/apps
# 2. Create new app or select existing app
# 3. Go to "Incoming Webhooks" and create webhook
# 4. Copy the webhook URL below
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Slack notification settings
SLACK_CHANNEL=#foundation-tests
SLACK_USERNAME=Foundation-Test-Bot
SLACK_ICON_EMOJI=:test_tube:

# ============================================================================
# HEALTHCHECKS.IO INTEGRATION (Recommended for external monitoring)
# ============================================================================
# Get UUID from: https://healthchecks.io/ -> Create Check -> Copy UUID
# 1. Go to https://healthchecks.io/
# 2. Create account and new check named 'Foundation SPEC Tests'
# 3. Set schedule to 'Daily' (matches nightly GitHub Actions)
# 4. Copy the check UUID from the URL
HEALTHCHECK_UUID=your-healthchecks-io-uuid-here

# HealthChecks.io settings
HEALTHCHECK_NAME=Foundation SPEC Tests
HEALTHCHECK_TAGS=foundation,specs,ninaivalaigal
HEALTHCHECK_GRACE_PERIOD=300

# ============================================================================
# FOUNDATION TEST ENVIRONMENT (Required)
# ============================================================================
# PostgreSQL Configuration
POSTGRES_PASSWORD=foundation_test_password_123  # pragma: allowlist secret
POSTGRES_USER=postgres
POSTGRES_DB=foundation_test
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Redis Configuration  
REDIS_PASSWORD=foundation_redis_456  # pragma: allowlist secret
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=15

# Database URLs
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# ============================================================================
# GRAPHOPS STACK CONFIGURATION (Phase 2B Unified Testbed)
# ============================================================================
# GraphOps PostgreSQL + Apache AGE
GRAPH_POSTGRES_PASSWORD=graphops_password_789  # pragma: allowlist secret
GRAPH_POSTGRES_USER=graphuser
GRAPH_POSTGRES_DB=ninaivalaigal_graph
GRAPH_POSTGRES_HOST=localhost
GRAPH_POSTGRES_PORT=5433

# GraphOps Redis
GRAPH_REDIS_HOST=localhost
GRAPH_REDIS_PORT=6380
GRAPH_REDIS_DB=0

# Apache AGE Configuration
APACHE_AGE_GRAPH_NAME=ninaivalaigal_memory_graph
APACHE_AGE_SCHEMA=ag_catalog

# GraphOps URLs
GRAPH_DATABASE_URL=postgresql://${GRAPH_POSTGRES_USER}:${GRAPH_POSTGRES_PASSWORD}@${GRAPH_POSTGRES_HOST}:${GRAPH_POSTGRES_PORT}/${GRAPH_POSTGRES_DB}
GRAPH_REDIS_URL=redis://${GRAPH_REDIS_HOST}:${GRAPH_REDIS_PORT}/${GRAPH_REDIS_DB}

# ============================================================================
# MEMORY FEEDBACK LOOP CONFIGURATION (SPEC-040)
# ============================================================================
# OpenAI Configuration (for embeddings)
OPENAI_API_KEY=your-openai-api-key-here  # pragma: allowlist secret
OPENAI_EMBEDDING_MODEL=text-embedding-ada-002
OPENAI_MAX_TOKENS=8192

# Embedding Configuration
EMBEDDING_DIMENSIONS=1536
SIMILARITY_THRESHOLD=0.8
EMBEDDING_CACHE_TTL=3600

# Feedback Loop Settings
FEEDBACK_LOOP_ENABLED=true
FEEDBACK_LEARNING_RATE=0.01
FEEDBACK_ADAPTATION_WINDOW=100
FEEDBACK_BATCH_SIZE=50

# ============================================================================
# PERFORMANCE AND TESTING THRESHOLDS
# ============================================================================
# Coverage Requirements
COVERAGE_THRESHOLD=85
CRITICAL_COVERAGE_THRESHOLD=100

# Performance Thresholds
PERFORMANCE_THRESHOLD_MS=100
MEMORY_INGEST_THRESHOLD_MS=500
MEMORY_RECALL_THRESHOLD_MS=200
GRAPH_TRAVERSAL_THRESHOLD_MS=50

# Scalability Limits
MAX_CONCURRENT_USERS=100
MAX_MEMORY_COUNT=100000
MAX_GRAPH_NODES=1000000
MAX_GRAPH_EDGES=5000000

# ============================================================================
# CI/CD AND AUTOMATION SETTINGS
# ============================================================================
# GitHub Actions Configuration
GITHUB_TOKEN=your-github-token-here  # pragma: allowlist secret
GITHUB_REPOSITORY=Arunosaur/ninaivalaigal
GITHUB_BRANCH=main

# Automation Settings
AUTO_RESTART_SERVICES=true
AUTO_RECOVERY_ENABLED=true
MAX_RECOVERY_ATTEMPTS=3
RECOVERY_BACKOFF_MULTIPLIER=2.0

# Quality Gate Settings
QUALITY_GATES_STRICT_MODE=true
BLOCK_PR_ON_FOUNDATION_FAILURE=true
BLOCK_PR_ON_COVERAGE_DROP=true
BLOCK_PR_ON_SECURITY_ISSUES=true

# ============================================================================
# MONITORING AND ALERTING CONFIGURATION
# ============================================================================
# Alert Thresholds
ALERT_ON_TEST_FAILURE=true
ALERT_ON_PERFORMANCE_REGRESSION=true
ALERT_ON_COVERAGE_DROP=true
ALERT_ON_SECURITY_ISSUES=true

# Notification Channels
NOTIFICATION_CHANNELS=slack,healthchecks,email
EMAIL_NOTIFICATIONS=admin@ninaivalaigal.com

# Monitoring Intervals
HEALTH_CHECK_INTERVAL_SECONDS=30
PERFORMANCE_MONITOR_INTERVAL_SECONDS=60
COVERAGE_CHECK_INTERVAL_SECONDS=300

# ============================================================================
# SECURITY AND COMPLIANCE SETTINGS
# ============================================================================
# Security Scanning
SECURITY_SCAN_ENABLED=true
BANDIT_SEVERITY_THRESHOLD=HIGH
SAFETY_CHECK_ENABLED=true

# Compliance Settings
AUDIT_LOGGING_ENABLED=true
AUDIT_LOG_RETENTION_DAYS=365
COMPLIANCE_MODE=SOC2

# Secret Management
SECRETS_DETECTION_ENABLED=true
SECRETS_BASELINE_FILE=.secrets.baseline

# ============================================================================
# DEVELOPMENT AND DEBUGGING
# ============================================================================
# Debug Settings
DEBUG_MODE=false
VERBOSE_LOGGING=false
LOG_LEVEL=INFO

# Development Overrides
DEV_SKIP_SLOW_TESTS=false
DEV_MOCK_EXTERNAL_SERVICES=false
DEV_PRESERVE_TEST_DATA=false

# Test Data Management
TEST_DATA_CLEANUP=true
TEST_DATA_RETENTION_HOURS=24
GENERATE_TEST_REPORTS=true

# ============================================================================
# CONTAINER AND INFRASTRUCTURE SETTINGS
# ============================================================================
# Container Runtime
CONTAINER_RUNTIME=container  # 'container' for Apple Container CLI, 'docker' for Docker
CONTAINER_PLATFORM=arm64     # 'arm64' for Apple Silicon, 'x86_64' for Intel

# Resource Limits
CONTAINER_MEMORY_LIMIT=2G
CONTAINER_CPU_LIMIT=2.0
CONTAINER_DISK_LIMIT=10G

# Network Configuration
NETWORK_NAME=ninaivalaigal_test_network
NETWORK_DRIVER=bridge
EXPOSE_PORTS_EXTERNALLY=false

# ============================================================================
# BACKUP AND RECOVERY CONFIGURATION
# ============================================================================
# Backup Settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE=daily
BACKUP_RETENTION_DAYS=30
BACKUP_LOCATION=./backups

# Recovery Settings
RECOVERY_ENABLED=true
RECOVERY_TIMEOUT_SECONDS=300
RECOVERY_RETRY_COUNT=3

# Data Persistence
PERSIST_TEST_DATA=false
PERSIST_PERFORMANCE_METRICS=true
PERSIST_AUDIT_LOGS=true

# ============================================================================
# PHASE 2B SPECIFIC CONFIGURATION
# ============================================================================
# Unified Testbed Settings
UNIFIED_TESTBED_ENABLED=true
MEMORY_GRAPH_SYNC_ENABLED=true
BIDIRECTIONAL_SYNC_INTERVAL_SECONDS=60

# Integration Test Settings
INTEGRATION_TEST_TIMEOUT_SECONDS=300
INTEGRATION_TEST_PARALLEL_EXECUTION=true
INTEGRATION_TEST_MAX_WORKERS=4

# Self-Heal Configuration
SELF_HEAL_ENABLED=true
SELF_HEAL_CHECK_INTERVAL_SECONDS=30
SELF_HEAL_MAX_ATTEMPTS=5

# ============================================================================
# EXAMPLE USAGE AND VALIDATION
# ============================================================================
# To validate this configuration:
# 1. Run: ./scripts/setup-monitoring.sh
# 2. Test: ./test-monitoring.sh
# 3. Validate: make check-env
# 4. Execute: make test-foundation
#
# For Phase 2B unified testing:
# 1. Start GraphOps: make start-graph-infrastructure
# 2. Run unified tests: make test-spec-040-062-unified
# 3. Monitor results: check Slack/HealthChecks.io
# ============================================================================
