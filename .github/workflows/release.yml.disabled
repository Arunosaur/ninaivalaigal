name: Release

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g @semantic-release/commit-analyzer
          npm install -g @semantic-release/release-notes-generator

      - name: Verify release configuration
        run: |
          echo "Verifying semantic-release configuration..."
          npx semantic-release --dry-run --no-ci

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release

  container-release:
    needs: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from package.json
        id: version
        run: |
          if [ -f package.json ]; then
            VERSION=$(node -p "require('./package.json').version")
          else
            VERSION="latest"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/api:latest
            ghcr.io/${{ github.repository }}/api:${{ steps.version.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push mem0 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.mem0
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/mem0:latest
            ghcr.io/${{ github.repository }}/mem0:${{ steps.version.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push UI image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ui
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/ui:latest
            ghcr.io/${{ github.repository }}/ui:${{ steps.version.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate container SBOMs
        run: |
          # Install syft for SBOM generation
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

          # Generate SBOMs for each container
          syft ghcr.io/${{ github.repository }}/api:${{ steps.version.outputs.version }} -o spdx-json > api-sbom.spdx.json
          syft ghcr.io/${{ github.repository }}/mem0:${{ steps.version.outputs.version }} -o spdx-json > mem0-sbom.spdx.json
          syft ghcr.io/${{ github.repository }}/ui:${{ steps.version.outputs.version }} -o spdx-json > ui-sbom.spdx.json

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: container-sboms-${{ steps.version.outputs.version }}
          path: |
            *-sbom.spdx.json
          retention-days: 90
