name: CI

on:
  pull_request:
  push:
    branches: [ main, master ]

permissions:
  contents: read
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Install project deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pre-commit pytest pytest-cov coverage[toml] ruff mypy

      - name: Pre-commit checks
        run: |
          if [ -f .pre-commit-config.yaml ]; then
            pre-commit run --all-files
          else
            echo "No .pre-commit-config.yaml found; skipping."
          fi

      - name: Type check (mypy) â€“ best effort
        run: |
          if [ -f mypy.ini ] || [ -f pyproject.toml ]; then
            mypy || true
          else
            echo "No mypy config; skipping."
          fi

      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          pytest -q --disable-warnings --maxfail=1 --cov --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: always()
        with:
          files: ./coverage.xml
          fail_ci_if_error: false

  pr-agent:
    name: PR-Agent review
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Run PR-Agent
        uses: qodo-ai/pr-agent@v0.24.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_KEY: ${{ secrets.OPENAI_API_KEY }}
          CONFIG: |
            model: gpt-4o-mini
            summarize: true
            review:
              enable_review: true
              request_labels: ["ai-review"]
              review_depth: "balanced"
              inline_comments: true
              suggest_fixes: true
              test_suggestions: true
              security_review: true
            pr_description:
              enable: true
            improve_code:
              enable: false
